{"version":3,"sources":["config.js","components/Navbar.js","components/HomeContent.js","components/Home.js","components/Product.js","components/Products.js","components/ProductAdmin.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["console","log","process","__webpack_exports__","api","invokeUrl","cognito","REGION","USER_POOL_ID","APP_CLIENT_ID","Navbar","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","error","message","stop","react_default","createElement","className","role","aria-label","href","src","width","height","alt","id","this","isAuthenticated","user","username","Fragment","onClick","Component","HomeContent","handleRegister","history","push","handleLogin","handleForgotPassword","handleChangePassword","handleLogout","Home","react","components_HomeContent","ProductAdmin","state","isEditMode","updatedproductname","name","handleProductEdit","setState","handleEditSave","handleUpdateProduct","onAddProductNameChange","target","value","_this2","isAdmin","index_es","icon","handleDeleteProduct","type","placeholder","onChange","config","require","FormErrors","formerrors","blankfield","passwordmatch","apierrors","validateForm","inputs","document","getElementsByClassName","i","length","classList","contains","remove","hasOwnProperty","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","handleSubmit","err","Validate","Object","objectSpread","signIn","sent","t0","onInputChange","defineProperty","components_FormErrors","onSubmit","aria-describedby","Register","_this$state","signUpResponse","signUp","attributes","ForgotPassword","forgotPasswordHandler","forgotPassword","ForgotPasswordVerification","passwordVerificationHandler","forgotPasswordSubmit","ChangePassword","currentAuthenticatedUser","changePassword","ChangePasswordConfirmation","Welcome","Footer","library","faEdit","App","isAuthenticating","authenticated","currentSession","session","authProps","BrowserRouter","Navbar_Navbar","Switch","Route","exact","path","render","assign","auth_LogIn","auth_Register","auth_ForgotPassword","auth_ForgotPasswordVerification","auth_ChangePassword","ChangePasswordConfirm","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignId","region","userPoolId","userPoolWebClientId","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab5f1913.chunk.js","sourcesContent":["\nconsole.log(\"process.env.REACT_APP_COGNITO_REGION\", process.env.REACT_APP_COGNITO_REGION);\nconsole.log(\"process.env.REACT_APP_COGNITO_POOL_ID\", process.env.REACT_APP_COGNITO_POOL_ID);\nconsole.log(\"process.env.REACT_APP_COGNITO_CLIENT_ID\", process.env.REACT_APP_COGNITO_CLIENT_ID);\n\nexport default {\n  api: { \n    invokeUrl: \"https://5bltcq602h.execute-api.us-west-2.amazonaws.com/prod\"\n  },\n  cognito: {\n    REGION: process.env.REACT_APP_COGNITO_REGION,\n    USER_POOL_ID: process.env.REACT_APP_COGNITO_POOL_ID,\n    APP_CLIENT_ID: process.env.REACT_APP_COGNITO_CLIENT_ID\n  }\n}\n","import React, { Component } from 'react'\nimport { Auth } from 'aws-amplify';\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n    }\n    catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"cognito-icon.png\" width=\"112\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n          <p className=\"navbar-item\">Cognito Demo</p>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          {/* <div className=\"navbar-start\">\n            <a href=\"/\" className=\"navbar-item\">\n              Home\n            </a>\n            <a href=\"/products\" className=\"navbar-item\">\n              Products\n            </a>\n            <a href=\"/admin\" className=\"navbar-item\">\n              Admin\n            </a>\n          </div> */}\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <React.Fragment>\n                    <a href=\"/register\" className=\"button is-primary\">\n                      <strong>Register</strong>\n                    </a>\n                    <a href=\"/login\" className=\"button is-light\">\n                      Log in\n                    </a>\n                  </React.Fragment>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <a href=\"/login\" className=\"button is-light\" onClick={this.handleLogOut}>\n                    Log out\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React from 'react'\nimport { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nclass HomeContent extends Component {\n    \n  handleRegister = () => {\n    console.log(\"HomeContent::handleRegister, auth:\", this.props.auth);\n    this.props.history.push(\"/registry\")\n  }  \n\n  handleLogin = () => {\n    console.log(\"HomeContent::handleLogin, auth:\", this.props.auth);\n  }  \n\n  handleForgotPassword = () => {\n    console.log(\"HomeContent::handleForgotPassword, auth:\", this.props.auth);\n  }  \n\n  handleChangePassword = () => {\n    console.log(\"HomeContent::handleChangePassword, auth:\", this.props.auth);\n  }  \n\n  handleLogout = (event) => {\n    console.log(\"HomeContent::handleLogin, auth:\", this.props.auth);\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n    }\n    catch (error) {\n      console.log(error.message)\n    }\n  }  \n\n  render() {\n    console.log(\"HomeContent::render, auth:\", this.props);\n    return (\n        <section className=\"container\">\n            <div className=\"columns features\">\n                \n                <div className=\"column is-3\">\n                    <div className=\"card is-shady\">\n                        <div className=\"card-content big-button\">\n                            <a href=\"/register\">\n                                <div className=\"content\" onClick={this.handleRegister}>\n                                    <h4>Register</h4>\n                                    <p>Click here to register using aws-amplify Auth.signUp(..)</p>\n                                    <p><a href=\"/\">Learn more</a></p>                                \n                                </div>  \n                            </a>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"column is-3\">\n                    <div className=\"card is-shady\">\n                        <div className=\"card-content big-button\">\n                            <a href=\"/login\">\n                                <div className=\"content\" onClick={this.handleLogin}>\n                                    <h4>Login</h4>\n                                    <p>Click here to register using aws-amplify Auth.signIn(..)</p>\n                                    <p><a href=\"/\">Learn more</a></p>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"column is-3\">\n                    <div className=\"card is-shady\">\n                        <div className=\"card-content big-button\">\n                            <a href=\"/logout\">\n                                <div className=\"content\" onClick={this.handleLogout}>\n                                    <h4>Logout</h4>\n                                    <p>Click here to register using aws-amplify Auth.signOut(..)</p>\n                                    <p><a href=\"/\">Learn more</a></p>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"column is-3\">\n                    <div className=\"card is-shady\">\n                        <div className=\"card-content big-button\">\n                            <a href=\"/forgotpassword\">\n                                <div className=\"content\" onClick={this.handleForgotPassword}>\n                                    <h4>Forgot Password</h4>\n                                    <p>Click here to register using aws-amplify Auth.forgotPassword(..)</p>\n                                    <p><a href=\"/\">Learn more</a></p>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"column is-3\">\n                    <div className=\"card is-shady\">\n                        <div className=\"card-content big-button\">\n                            <a href=\"/changepassword\">\n                                <div className=\"content\" onClick={this.handleChangePassword}>\n                                    <h4>Change Password</h4>\n                                    <p>Click here to register using aws-amplify Auth.changePassword(..)</p>\n                                    <p><a href=\"/\">Learn more</a></p>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </section>\n    )\n  }\n}\n\nexport default HomeContent;","import React, { Fragment } from 'react';\nimport Hero from './Hero';\nimport HomeContent from './HomeContent';\n\nexport default function Home(props) {\n  return (\n    <Fragment>\n      {/* <Hero /> */}\n      <br></br>\n      <div className=\"box cta\">\n        <p className=\"has-text-centered\">\n          This React application demostrate the use of AWS Cognito, user the Regsiter, Login, Logout, Forgot password and Change password to test it.\n        </p>\n      </div>\n      <HomeContent {...props}/>\n    </Fragment>\n  )\n}\n","import React, { Component, Fragment }  from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default class ProductAdmin extends Component {\n\n  state = {\n    isEditMode: false,\n    updatedproductname: this.props.name\n  }\n\n  handleProductEdit = event => {\n    event.preventDefault();\n    this.setState({ isEditMode: true });\n  }\n\n  handleEditSave = event => {\n    event.preventDefault();\n    this.setState({ isEditMode: false });\n    this.props.handleUpdateProduct(this.props.id, this.state.updatedproductname);\n  }\n\n  onAddProductNameChange = event => this.setState({ \"updatedproductname\": event.target.value });\n\n  render() {\n    return (\n      <div className=\"tile is-child box notification is-success\">\n        {\n          this.props.isAdmin && \n          <Fragment>\n            <a href=\"/\" onClick={this.handleProductEdit} className=\"product-edit-icon\">\n              <FontAwesomeIcon icon=\"edit\" />\n            </a>\n            <button onClick={event => this.props.handleDeleteProduct(this.props.id, event)} className=\"delete\"></button>\n          </Fragment>\n        }\n        {\n          this.state.isEditMode \n          ? <div>\n              <p>Edit product name</p>\n              <input \n                className=\"input is-medium\"\n                type=\"text\" \n                placeholder=\"Enter name\"\n                value={this.state.updatedproductname}\n                onChange={this.onAddProductNameChange}\n              />\n              <p className=\"product-id\">id: { this.props.id }</p>\n              <button type=\"submit\" \n                className=\"button is-info is-small\"\n                onClick={ this.handleEditSave }\n              >save</button>\n            </div>\n          : <div>\n              <p className=\"product-title\">{ this.props.name }</p>\n              <p className=\"product-id\">id: { this.props.id }</p>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Product from './Product';\nimport axios from \"axios\";\nconst config = require('../config');\n\nexport default class Products extends Component {\n\n  state = {\n    newproduct: null,\n    products: []\n  }\n\n  fetchProducts = async () => {\n    // add call to AWS API Gateway to fetch products here\n    // then set them in state\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  componentDidMount = () => {\n    this.fetchProducts();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <h1>Energy Products</h1>\n            <p className=\"subtitle is-5\">Invest in a clean future with our efficient and cost-effective green energy products:</p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column\">\n                <div className=\"tile is-ancestor\">\n                  <div className=\"tile is-4 is-parent  is-vertical\">\n                    { \n                      this.state.products && this.state.products.length > 0\n                      ? this.state.products.map(product => <Product name={product.productname} id={product.id} key={product.id} />)\n                      : <div className=\"tile notification is-warning\">No products available</div>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Product from './Product';\nimport axios from \"axios\";\nconst config = require('../config');\n\nexport default class ProductAdmin extends Component {\n\n  state = {\n    newproduct: { \n      \"productname\": \"\", \n      \"id\": \"\"\n    },\n    products: []\n  }\n\n  handleAddProduct = async (id, event) => {\n    event.preventDefault();\n    // add call to AWS API Gateway add product endpoint here\n    try {\n      const params = {\n        \"id\": id,\n        \"productname\": this.state.newproduct.productname\n      };\n      await axios.post(`${config.api.invokeUrl}/products/${id}`, params);\n      this.setState({ products: [...this.state.products, this.state.newproduct] });\n      this.setState({ newproduct: { \"productname\": \"\", \"id\": \"\" }});\n    }catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  handleUpdateProduct = async (id, name) => {\n    // add call to AWS API Gateway update product endpoint here\n    try {\n      const params = {\n        \"id\": id,\n        \"productname\": name\n      };\n      await axios.patch(`${config.api.invokeUrl}/products/${id}`, params);\n      const productToUpdate = [...this.state.products].find(product => product.id === id);\n      const updatedProducts = [...this.state.products].filter(product => product.id !== id);\n      productToUpdate.productname = name;\n      updatedProducts.push(productToUpdate);\n      this.setState({products: updatedProducts});\n    }catch (err) {\n      console.log(`Error updating product: ${err}`);\n    }\n  }\n\n  handleDeleteProduct = async (id, event) => {\n    event.preventDefault();\n    // add call to AWS API Gateway delete product endpoint here\n    try {\n      await axios.delete(`${config.api.invokeUrl}/products/${id}`);\n      const updatedProducts = [...this.state.products].filter(product => product.id !== id);\n      this.setState({products: updatedProducts});\n    }catch (err) {\n      console.log(`Unable to delete product: ${err}`);\n    }\n  }\n\n  fetchProducts = async () => {\n    // add call to AWS API Gateway to fetch products here\n    // then set them in state\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  onAddProductNameChange = event => this.setState({ newproduct: { ...this.state.newproduct, \"productname\": event.target.value } });\n  onAddProductIdChange = event => this.setState({ newproduct: { ...this.state.newproduct, \"id\": event.target.value } });\n\n  componentDidMount = () => {\n    this.fetchProducts();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <h1>Product Admin</h1>\n            <p className=\"subtitle is-5\">Add and remove products using the form below:</p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column is-one-third\">\n                <form onSubmit={event => this.handleAddProduct(this.state.newproduct.id, event)}>\n                  <div className=\"field has-addons\">\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter name\"\n                        value={this.state.newproduct.productname}\n                        onChange={this.onAddProductNameChange}\n                      />\n                    </div>handleAddProduct\n                    <div className=\"control\">handleAddProduct\n                      <input handleAddProduct\n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter id\"\n                        value={this.state.newproduct.id}\n                        onChange={this.onAddProductIdChange}\n                      />handleAddProduct\n                    </div>\n                    <div className=\"control\">\n                      <button type=\"submit\" className=\"button is-primary is-medium\">\n                        Add product\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"column is-two-thirds\">\n                <div className=\"tile is-ancestor\">\n                  <div className=\"tile is-4 is-parent  is-vertical\">\n                    { \n                      this.state.products.map((product, index) => \n                        <Product handleAddProduct\n                          isAdmin={true}\n                          handleUpdateProduct={this.handleUpdateProduct}\n                          handleDeleteProduct={this.handleDeleteProduct} \n                          name={product.productname} \n                          id={product.id}\n                          key={product.id}\n                        />)\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    )\n  }\n}\n","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(\"user:\", user);      \n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\")\n     }\n    catch (error) {\n      let err = null;\n      !error.message ? err = {\"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      })\n    }    \n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Log in</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    console.log(\"register submit halder\");\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n    try {\n      const signUpResponse = await Auth.signUp({\n        username, \n        password, \n        attributes: {\n          email\n        }\n      });\n      console.log(\"signUpResponse:\", signUpResponse);\n      this.props.history.push(\"/welcome\")\n    }\n    catch (error) {\n      let err = null;\n      !error.message ? err = {\"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      })\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    console.log(\"Registry:render\");\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Register</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"userNameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Register\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  }\n\n  forgotPasswordHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPassword(this.state.email);\n      this.props.history.push('/forgotpasswordverification');\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Forgot your password?</h1>\n          <p>\n            Please enter the email address associated with your account and we'll\n            email you a password reset link.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.forgotPasswordHandler}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPasswordVerification extends Component {\n  state = {\n    verificationcode: \"\",\n    email: \"\",\n    newpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  passwordVerificationHandler = async event => {\n    console.log('passwordVerificationHandler');\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPasswordSubmit(\n        this.state.email,\n        this.state.verificationcode,\n        this.state.newpassword\n      );\n      this.props.history.push('/changepasswordconfirmation')\n    }\n    catch (e) {\n      console.log(e);\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Set new password</h1>\n          <p>\n            Please enter the verification code sent to your email address below,\n            your email address and a new password.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.passwordVerificationHandler}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationCodeHelp\"\n                  placeholder=\"Enter verification code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ChangePassword extends Component {\n  state = {\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      console.log(\"ChangePassword: user -\", user);\n      await Auth.changePassword(\n        user,\n        this.state.oldpassword,\n        this.state.newpassword\n      )\n      this.props.history.push('/changepasswordconfirmation');\n    }\n    catch (e) {\n      console.log(e)\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"oldpassword\"\n                  placeholder=\"Old password\"\n                  value={this.state.oldpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePassword;","import React, { Component } from \"react\";\n\nclass ChangePasswordConfirmation extends Component {\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <p>Your password has been successfully updated!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePasswordConfirmation;","import React from 'react';\n\nexport default function Welcome() {\n  return (\n    <section className=\"section auth\">\n      <div className=\"container\">\n        <h1>Welcome!</h1>\n        <p>You have successfully registered a new account.</p>\n        <p>We've sent you an email. Please click on the confirmation link to verify your account.</p>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n           <a href=\"http://www.tsemach.org\">tsemach.org</a> 2019. The source code is licensed MIT\n        </p>\n      </div>\n    </footer>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Products from './components/Products';\nimport ProductAdmin from './components/ProductAdmin';\nimport LogIn from './components/auth/LogIn';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\nimport ChangePassword from './components/auth/ChangePassword';\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\nimport Welcome from './components/auth/Welcome';\nimport Footer from './components/Footer';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth } from 'aws-amplify';\nlibrary.add(faEdit);\n\nconsole.log(\"In App: should work\");\nconsole.log(\"process.env.REACT_APP_COGNITO_REGION\", process.env.REACT_APP_COGNITO_REGION);\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  // user: is object return by Auth (aws-amplify), here we just keep for other components\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {\n      /**\n       * get session from localStore as store by Auth.\n       * Auth: is handle all the details about the session and localStore\n       */\n      \n      const session = await Auth.currentSession();\n      console.log('session:', session);\n      this.setAuthStatus(true);\n      const user = await Auth.currentAuthenticatedUser();\n      this.setUser(user);\n    }\n    catch (e) {\n      console.log(e)\n    }    \n    this.setState({isAuthenticating: false});\n  }\n\n  render() {    \n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar auth={authProps}/>\n            <Switch>\n              <Route exact path=\"/\" render={(props) => <Home {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/products\" render={(props) => <Products {...props} auth={authProps} />} />\n              <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} /> */}\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.scss';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log(config.cognito.REGION);\nconsole.log(config.cognito.USER_POOL_ID);\nconsole.log(config.cognito.APP_CLIENT_ID);\n\nconsole.log(\"index.js:\", config);\nAmplify.configure({\n    Auth: {\n        mandatorySignId: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}